name: Release
run-name: ${{ inputs.reason }}

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      reason:
        description: Dispatch reason
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release-id: ${{ steps.create-release.outputs.result }}
    steps:
      - name: Create release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.split('/').at(-1);
            const release = await github.rest.repos.createRelease({
              name: `Release ${tag}`,
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              generate_release_notes: true
            });

            return release.data.id;

  build-and-upload:
    name: Build and Upload
    needs: create-release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup or update Rust toolchain
        run: rustup toolchain install stable --profile default

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: stable

      - name: Build project
        run: cargo build --verbose --release

      - name: Upload release asset
        uses: actions/github-script@v7
        with:
          script: |
            const asset = await (await import("node:fs")).readFile(`target/release/${context.repo.repo}${{ runner.os == 'Windows' && '.exe' || '' }}`);

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release-id }},
              name: "lure-release-${{ runner.os }}",
              data: asset
            });
